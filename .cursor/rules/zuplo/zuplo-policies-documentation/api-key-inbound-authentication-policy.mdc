---
description: Refer to this when working with Zuplo API keys
globs: 
alwaysApply: false
---
Menu

# [​](https://zuplo.com/docs/policies/api-key-inbound\#api-key-authentication-policy) API Key Authentication Policy

You can learn more about the Zuplo API Key Service
[in our documentation](https://zuplo.com/docs/articles/api-key-api#buckets)

Authenticate requests with Zuplo's fully managed API Key service. This policy is
the easiest way to secure your API and can be combined with other policies like
Rate limiting, quotas, and more to build a fully featured API to support your
partners, developers, or customers.

For more information on Zuplo's API Key Management service and options enabling
self-serve API Key management see the following resources:

- [API Key Authentication Overview](https://zuplo.com/docs/articles/api-key-management)
- [API Key Management API](https://zuplo.com/docs/articles/api-key-api)

## [​](https://zuplo.com/docs/policies/api-key-inbound\#configuration) Configuration

The configuration shows how to configure the policy in the 'policies.json' document.

```

{
  "name": "my-api-key-inbound-policy",
  "policyType": "api-key-inbound",
  "handler": {
    "export": "ApiKeyInboundPolicy",
    "module": "$import(@zuplo/runtime)",
    "options": {
      "allowUnauthenticatedRequests": false,
      "cacheTtlSeconds": 60
    }
  }
}
```

json

### [​](https://zuplo.com/docs/policies/api-key-inbound\#policy-configuration) Policy Configuration

- `name` `<string>` \- The name of your policy instance. This is used as a reference in your routes.
- `policyType` `<string>` \- The identifier of the policy. This is used by the Zuplo UI. Value should be `api-key-inbound`.
- `handler.export` `<string>` \- The name of the exported type. Value should be `ApiKeyInboundPolicy`.
- `handler.module` `<string>` \- The module containing the policy. Value should be `$import(@zuplo/runtime)`.
- `handler.options` `<object>` \- The options for this policy. [See Policy Options](https://zuplo.com/docs/policies/api-key-inbound#policy-options) below.

### [​](https://zuplo.com/docs/policies/api-key-inbound\#policy-options) Policy Options

The options for this policy are specified below. All properties are optional unless specifically marked as required.

- `authHeader` `<string>` \- The name of the header with the key. Defaults to `"Authorization"`.
- `authScheme` `<string>` \- The scheme used on the header. Defaults to `"Bearer"`.
- `bucketName` `<string>` \- The name of the API Key service bucket. Defaults to the autogenerated bucket name for your project.
- `allowUnauthenticatedRequests` `<boolean>` \- If requests should proceed even if the policy does not successfully authenticate the request. Defaults to false and rejects any request without a valid API key (returning a `401 - Unauthorized` response). Set to `true` to support multiple authentication methods or support both authenticated and anonymous requests. Defaults to `false`.
- `cacheTtlSeconds` `<number>` \- The time to cache authentication results for a particular key. Higher values will decrease latency. Cached results will be valid until the cache expires even in the event the key is deleted, etc. Defaults to `60`.
- `disableAutomaticallyAddingKeyHeaderToOpenApi` `<boolean>` \- Zuplo will automatically document your API key header within your OpenAPI specification & Developer Portal. Set this to `true` to disable this behavior.

## [​](https://zuplo.com/docs/policies/api-key-inbound\#using-the-policy) Using the Policy

Adding API Key authentication to your Zuplo API takes only a few minutes. This
document shows you how to add the policy to your routes, create an API key, and
make a request using the API Key.

## [​](https://zuplo.com/docs/policies/api-key-inbound\#add-the-api-key-policy) Add the API Key Policy

The first step to setting up API Key authentication is to add the API
Authentication policy to a route in your project.

1. In the [Zuplo Portal](https://portal.zuplo.com/) open the **Route Designer**
in the **Files** tab then click **routes.oas.json**.

2. Select or create a route that you want to authenticate with API Keys. Expand
the **Policies** section and click **Add Policy**. Search for and select the
Auth0 JWT Auth policy.
![](https://cdn.zuplo.com/assets/1a35f4e6-9309-4f22-89da-2e2c25e68403.png)
3. With the policy selected, you will see the configuration and information
about the options. For this tutorial just leave the options as they are and
click **OK** to save the policy.
![](https://cdn.zuplo.com/assets/736fad78-37c8-4f12-9e58-8e697a14284c.png)

## [​](https://zuplo.com/docs/policies/api-key-inbound\#create-an-api-key) Create an API Key

In order to make a request to the route, you'll need an API Key.

1. In the [Zuplo Portal](https://portal.zuplo.com/) open the **API Key**
**Consumers** section in the **Settings** tab.

2. Click the button **Add New Consumer**.

3. In the form that appears, enter a value for the **Subject** such as
`my-test`. You can leave the other fields empty. Click **OK** to create the
consumer.
![](https://cdn.zuplo.com/assets/68b4571d-fcbc-4c92-977f-7612cd0cfb32.png)
4. Now you can see the newly created consumer and its default API key. Select
the **Copy** button to copy the API Key. You will use this value in the next
section.


![](https://cdn.zuplo.com/assets/98a3d62f-1b61-4f41-8bac-665e0b02309e.png)

### [​](https://zuplo.com/docs/policies/api-key-inbound\#test-the-policy) Test the Policy

Finally, you'll make two API requests to your route to test that authentication
is working as expected.

1. In the route designer on the route you added the policy, click the **Test**
button. In the dialog that opens, click **Test** to make a request.

2. The API Gateway should respond with a **401 Unauthorized** response.


![](https://cdn.zuplo.com/assets/626e10a2-2350-439a-9081-1ccf1fe90cad.png)

3. Now to make an authenticated request, add a header to the request called
`Authorization`. Set the value of the header to `Bearer YOUR_API_KEY`
replacing `YOUR_API_KEY` with the value of the API Key you copied in the
previous section.

![](https://cdn.zuplo.com/assets/11a3f88a-8613-43c9-9429-4c82e1f1ab4d.png)

4. Click the **Test** button and a **200 OK** response should be returned.

![](https://cdn.zuplo.com/assets/8182f932-8db6-4456-842f-f65158b174c0.png)

You have now setup API Key Authentication on your API Gateway.

See [this document](https://zuplo.com/docs/articles/api-key-management) for more information
about API Keys and API Key Management with Zuplo.

## [​](https://zuplo.com/docs/policies/api-key-inbound\#writing-tests-with-the-auth-policy) Writing Tests with the Auth Policy

For information on running tests while using API Key Authentication see the
document
[Testing API Key Authentication](https://zuplo.com/docs/articles/testing-api-key-authentication).

Read more about [how policies work](https://zuplo.com/docs/articles/policies)

* * *

[← Previous page\\
\\
Policy Fundamentals](https://zuplo.com/docs/articles/policies "Policy Fundamentals") [Next page →\\
\\
Auth0 JWT Auth Policy](https://zuplo.com/docs/policies/auth0-jwt-auth-inbound "Auth0 JWT Auth Policy")