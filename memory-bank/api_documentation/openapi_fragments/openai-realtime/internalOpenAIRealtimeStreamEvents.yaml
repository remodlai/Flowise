"/openai-realtime/{threadId}/{runId}":
  get:
    summary: "INTERNAL: Stream OpenAI Assistant Run Events (SSE)"
    description: |
      INTERNAL: Establishes a Server-Sent Event (SSE) stream to receive real-time updates 
      for a specific OpenAI Assistant thread run. The client will receive events like 
      `thread.run.step.delta`, `thread.message.completed`, etc.
    operationId: "internalOpenAIRealtimeStreamEvents"
    tags: ["OpenAI Assistants", "Realtime", "InternalAPI"]
    parameters:
      - name: threadId
        in: path
        required: true
        description: "The ID of the OpenAI Assistant thread."
        schema:
          type: string
      - name: runId
        in: path
        required: true
        description: "The ID of the specific run within the thread."
        schema:
          type: string
    responses:
      '200':
        description: |
          Server-Sent Event stream. The client will receive multiple events over time.
          The `data` field of each event is a JSON string representing an OpenAI API object 
          (e.g., Run, RunStep, Message, MessageDelta, RunStepDelta).
          Known event names include: `thread.created`, `thread.run.created`, `thread.run.queued`, 
          `thread.run.in_progress`, `thread.run.requires_action`, `thread.run.completed`, 
          `thread.run.failed`, `thread.run.cancelling`, `thread.run.cancelled`, `thread.run.expired`,
          `thread.run.step.created`, `thread.run.step.in_progress`, `thread.run.step.delta`, 
          `thread.run.step.completed`, `thread.run.step.failed`, `thread.run.step.cancelled`, 
          `thread.run.step.expired`, `thread.message.created`, `thread.message.in_progress`, 
          `thread.message.delta`, `thread.message.completed`, `thread.message.incomplete`, 
          `error`, `done`.
        content:
          text/event-stream:
            schema:
              type: string # Represents the stream of events
              example: |
                event: thread.run.step.delta
                data: {"id": "step_...", "delta": {"step_details": {...}}, ...}

                event: thread.message.completed
                data: {"id": "msg_...", "content": [...], ...}

                event: done
                data: "[DONE]"
      '401':
        description: "Unauthorized (e.g., missing or invalid OpenAI credential)."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      '404':
        description: "Thread or Run not found on OpenAI."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      '500':
        description: "Internal Server Error establishing or handling the stream."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
    # security:
    #   - InternalApiKeyAuth: [] # For Flowise API access
    # Implicitly uses OpenAI API key from credentials for the proxied call.
