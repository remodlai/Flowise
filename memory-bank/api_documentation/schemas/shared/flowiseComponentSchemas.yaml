components:
  schemas:
    INodeParamOptionSchema: # Based on INodeParams options from flowise-components
      type: object
      properties:
        label: { type: string }
        name: { type: string }
        description: { type: string, nullable: true }
      required: [label, name]

    INodeParamSchema: # Based on INodeParams from flowise-components
      type: object
      properties:
        label: { type: string }
        name: { type: string }
        type: { type: string, description: "e.g., string, number, boolean, options, file, json, credential, asyncOptions" }
        description: { type: string, nullable: true }
        default: { type: string, nullable: true, description: "Can be of any type, represented as string for flexibility." } # Actual type can vary
        options:
          type: array
          items:
            $ref: '#/components/schemas/INodeParamOptionSchema'
          nullable: true
        fileType: { type: string, nullable: true, description: "e.g., .pdf,.txt,.json" }
        optional: { type: boolean, nullable: true }
        rows: { type: integer, nullable: true }
        placeholder: { type: string, nullable: true }
        credentialNames: { type: array, items: { type: string }, nullable: true }
        loadMethod: { type: string, nullable: true, description: "Name of method on node class to load options."}
        # Additional less common fields like list, acceptVariable, etc. could be added
      required: [label, name, type]

    INodeData: # Based on INodeData from flowise-components (INodeDataFromComponent + INodeParams arrays)
      type: object
      properties:
        label: { type: string }
        name: { type: string } # Component name
        version: { type: integer }
        description: { type: string, nullable: true }
        type: { type: string } # e.g., "ChatModel", "Tool"
        category: { type: string }
        icon: { type: string, nullable: true } # iconSrc
        baseClasses: { type: array, items: { type: string } }
        inputs: # This is a free-form object in INodeDataFromComponent, actual parameters are defined in inputParams
          type: object
          additionalProperties: true 
          description: "Key-value pairs of current input values for the node instance."
        inputParams: # Definition of the parameters
          type: array
          items:
            $ref: '#/components/schemas/INodeParamSchema'
        inputAnchors:
          type: array
          items:
            $ref: '#/components/schemas/INodeParamSchema' # Anchors often share structure with params
        outputAnchors:
          type: array
          items:
            $ref: '#/components/schemas/INodeParamSchema'
        outputs: # Similar to inputs, the actual output fields might be defined elsewhere or implicitly
          type: object
          additionalProperties: true
          description: "Key-value pairs of current output values from the node instance (if applicable)."
        credential: { type: string, format: uuid, nullable: true, description: "ID of credential used by this node." }
        # id: { type: string, description: "Instance ID of the node in a flow." } - Often part of ReactFlowNode, not strictly INodeData for this API
        # ... other potential fields from INodeDataFromComponent like code, func ...
      required: [label, name, version, type, category, baseClasses]

    INodeOptionsValue: # From flowise-components
      type: object
      properties:
        label: { type: string }
        name: { type: string }
        value: { type: string, nullable: true, description: "Optional value, if different from name" }
        description: { type: string, nullable: true }
        icon: { type: string, nullable: true, description: "Base64 data URI for an icon." }
        parentGroup: { type: string, nullable: true, description: "For grouping options in UI."}
      required: [label, name]

    NodeComponentDefinition: # Based on INode from flowise-components / services/nodes/getAllNodes
      allOf: 
        - $ref: '#/components/schemas/INodeData'
      # No additional properties here, INodeData covers most of what's returned by GET /nodes endpoints.
