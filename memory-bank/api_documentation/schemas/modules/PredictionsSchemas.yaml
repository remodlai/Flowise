openapi: 3.1.0
info:
  title: Predictions Module Schemas
  version: '1.0'
components:
  schemas:
    PredictionsRequestBody:
      type: object
      properties:
        question:
          type: string
          description: The user's query or input message.
        overrideConfig:
          type: object
          description: >-
            Optional JSON object to override specific node parameters within the
            chatflow execution. Keys correspond to node IDs, and values are objects
            mapping parameter names to their new values. The exact structure depends
            heavily on the specific chatflow being executed.
          additionalProperties: true
          example:
            IntentDetection_0:
              modelName: 'gpt-4'
            OutputParser_1:
              returnReasoning: true
        history:
          type: array
          description: Optional array of previous chat messages for context.
          items:
            $ref: '../../shared/CommonSchemas.yaml#/components/schemas/ChatMessage'
        uploads:
          type: array
          description: Optional array of file uploads provided via chat component (data URI format). Ignored if using multipart/form-data.
          items:
            $ref: '#/components/schemas/FileUploadChat'
        streaming:
          type: boolean
          description: Request a Server-Sent Events (SSE) streaming response instead of a single JSON response.
          default: false
        chatId:
          type: string
          description: Optional chat session ID. If not provided, uses overrideConfig.sessionId or generates a new one.
          format: uuid
        leadEmail:
          type: string
          description: Optional email address for lead capture features.
        vars:
           type: object
           description: Optional key-value pairs for variable overrides. Typically provided via form-data rather than JSON body.
           additionalProperties: true

    InternalPredictionRequest:
      type: object
      required:
        - question
      properties:
        question:
          type: string
          description: "The primary input/query for the chatflow."
        overrideConfig:
          type: object
          additionalProperties: true
          nullable: true
          description: "Key-value pairs to override node configurations within the chatflow for this specific execution."
        history:
          type: array
          items:
            $ref: "../../shared/CommonSchemas.yaml#/components/schemas/ChatMessage"
          nullable: true
          description: "An array of previous chat messages to provide context."
        chatId:
          type: string
          nullable: true
          description: "ID of the chat session. If not provided, a new one might be generated or handled by session management."
        sessionId:
          type: string
          nullable: true
          description: "Specific session ID to use for memory persistence."
        stopNodeId:
          type: string
          nullable: true
          description: "ID of a node at which the flow execution should stop prematurely."
        uploads:
          type: array
          items:
            $ref: "#/components/schemas/FileUploadChat"
          nullable: true
          description: "Array of uploaded file details, if the flow uses file inputs."
        streaming:
          type: boolean
          nullable: true
          description: "If true, the response will be streamed using SSE. Otherwise, a single JSON response will be returned."
          default: false

    FileUploadChat:
      type: object
      required:
        - name
        - type
        - data
        - mime
      properties:
        name:
          type: string
          description: The name of the uploaded file.
        type:
          type: string
          description: The type of upload (e.g., 'image', 'audio', 'file', 'file:rag', 'url'). Use 'stored-file' for subsequent references after initial upload.
        data:
          type: string
          description: The file content, typically as a base64 encoded data URI. Omitted after initial processing for 'stored-file'.
        mime:
          type: string
          description: The MIME type of the file (e.g., 'image/png', 'audio/webm').

    PredictionsSuccessResponse:
      type: object
      properties:
        text:
          type: string
          description: The primary textual response from the chatflow execution.
        chatId:
          type: string
          format: uuid
          description: The chat session ID used for the execution.
        chatMessageId:
          type: string
          format: uuid
          description: The ID of the API message saved to the database.
        question:
          type: string
          description: The original user question that triggered the prediction.
        sessionId:
          type: string
          format: uuid
          description: Session ID, often the same as chatId, but can differ based on memory node config or OpenAI Assistant usage (threadId).
        memoryType:
          type: string
          description: Label/type of the memory node used in the flow (if any).
        sourceDocuments:
          type: array
          description: Optional array of source documents retrieved and used by RAG nodes.
          items:
            type: object
            # Structure depends on the specific retriever/vector store node
            additionalProperties: true
        usedTools:
          type: array
          description: Optional array describing tools used during the execution (e.g., by ReAct agents).
          items:
            type: object
            # Structure depends on the agent/tool node
            additionalProperties: true
        fileAnnotations:
          type: array
          description: Optional array of file annotations, typically from OpenAI Assistants.
          items:
            type: object
            # Structure depends on the OpenAI Assistant node
            additionalProperties: true
        artifacts:
          type: array
          description: Optional array of artifacts generated during the flow (e.g., images, files).
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
                enum: [url, stored-file, base64]
              data:
                type: string
              # Other properties might exist depending on the node
            additionalProperties: true
        followUpPrompts:
          type: array
          description: Optional array of suggested follow-up prompts.
          items:
            type: string
        flowVariables:
          type: object
          description: Optional key-value pairs representing the output of Set Variable nodes configured with 'Show Output'.
          additionalProperties: true
        isStreamValid:
          type: boolean
          description: Indicates if the executed flow configuration *could* have supported streaming (true/false).
        json:
          type: object
          description: If the primary result is a JSON object instead of text, it will appear here.
          additionalProperties: true

    StreamEventType:
      type: string
      description: "Type of event in the streaming SSE response."
      enum:
        - start
        - token
        - sourceDocuments
        - artifacts
        - usedTools
        - calledTools
        - fileAnnotations
        - tool
        - agentReasoning
        - nextAgent
        - agentFlowEvent
        - agentFlowExecutedData
        - nextAgentFlow
        - action
        - error
        - metadata
        - usageMetadata
        - end

    StreamEvent:
      type: object
      description: "A server-sent event in the streaming response."
      properties:
        event:
          $ref: "#/components/schemas/StreamEventType"
        data:
          oneOf:
            - type: string
            - type: object
              additionalProperties: true
            - type: array
              items:
                type: object
                additionalProperties: true
      required:
        - event
        - data

    AgentFlowStatus:
      type: string
      description: "Status of an agent flow or node execution."
      enum:
        - INPROGRESS
        - FINISHED
        - ERROR
        - TERMINATED
        - TIMEOUT
        - STOPPED

    NodeStatus:
      type: object
      description: "Status and metadata about a node's execution."
      properties:
        nodeId:
          type: string
          description: "ID of the node."
        nodeLabel:
          type: string
          description: "Display label of the node."
        status:
          $ref: "#/components/schemas/AgentFlowStatus"
      required:
        - nodeId
        - nodeLabel
        - status

    UsageMetadata:
      type: object
      description: "Token usage statistics for model calls."
      properties:
        input_tokens:
          type: integer
          description: "Number of input tokens."
        output_tokens:
          type: integer
          description: "Number of output tokens."
        total_tokens:
          type: integer
          description: "Total tokens used."
        input_token_details:
          type: object
          description: "Detailed breakdown of input tokens."
          properties:
            audio:
              type: integer
              description: "Audio input tokens."
            cache_read:
              type: integer
              description: "Tokens retrieved from cache."
        output_token_details:
          type: object
          description: "Detailed breakdown of output tokens."
          properties:
            audio:
              type: integer
              description: "Audio output tokens."
            reasoning:
              type: integer
              description: "Reasoning process tokens."
        tool_call_tokens:
          type: integer
          description: "Tokens used in tool calls."
      required:
        - input_tokens
        - output_tokens
        - total_tokens
