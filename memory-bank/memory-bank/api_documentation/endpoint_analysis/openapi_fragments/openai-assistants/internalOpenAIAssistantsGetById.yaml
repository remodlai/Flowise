"/openai-assistants/{id}":
  get:
    summary: "INTERNAL: Get Single OpenAI Assistant (Enriched)"
    description: "INTERNAL: Retrieves a specific OpenAI Assistant by ID, with enriched file details in `tool_resources`."
    operationId: "internalOpenAIAssistantsGetById"
    tags: ["OpenAI Assistants", "InternalAPI"]
    parameters:
      - name: id
        in: path
        required: true
        description: "ID of the OpenAI Assistant."
        schema:
          type: string
      - name: credential
        in: query
        required: true
        description: "ID of the Remodl Core credential for OpenAI API key."
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: "Successfully retrieved the OpenAI Assistant."
        content:
          application/json:
            schema: # Enriched OpenAIAssistant schema
              # While this uses OpenAIAssistant as a base, the tool_resources is modified.
              # A more specific response schema like OpenAIAssistantEnrichedResponse might be better.
              # For now, we indicate that the standard OpenAIAssistant schema applies, 
              # with the understanding that tool_resources may contain additional resolved file data.
              $ref: "#/components/schemas/OpenAIAssistant" 
      '404':
        description: "Credential or Assistant not found."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      '412':
        description: "Precondition Failed (id or credential missing)."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
      '500':
        description: "Internal Server Error."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ErrorResponse"
    # security:
    #   - InternalApiKeyAuth: []
